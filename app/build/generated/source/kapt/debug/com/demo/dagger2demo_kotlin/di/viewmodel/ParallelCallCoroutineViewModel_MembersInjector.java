// Generated by Dagger (https://dagger.dev).
package com.demo.dagger2demo_kotlin.di.viewmodel;

import com.demo.dagger2demo_kotlin.di.RetroServiceInterface;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ParallelCallCoroutineViewModel_MembersInjector implements MembersInjector<ParallelCallCoroutineViewModel> {
  private final Provider<RetroServiceInterface> mServiceProvider;

  public ParallelCallCoroutineViewModel_MembersInjector(
      Provider<RetroServiceInterface> mServiceProvider) {
    this.mServiceProvider = mServiceProvider;
  }

  public static MembersInjector<ParallelCallCoroutineViewModel> create(
      Provider<RetroServiceInterface> mServiceProvider) {
    return new ParallelCallCoroutineViewModel_MembersInjector(mServiceProvider);
  }

  @Override
  public void injectMembers(ParallelCallCoroutineViewModel instance) {
    injectMService(instance, mServiceProvider.get());
  }

  @InjectedFieldSignature("com.demo.dagger2demo_kotlin.di.viewmodel.ParallelCallCoroutineViewModel.mService")
  public static void injectMService(ParallelCallCoroutineViewModel instance,
      RetroServiceInterface mService) {
    instance.mService = mService;
  }
}
